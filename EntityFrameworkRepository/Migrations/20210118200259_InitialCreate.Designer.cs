// <auto-generated />
using System;
using EntityFrameworkRepository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFrameworkRepository.Migrations
{
    [DbContext(typeof(BestellingSysteemContext))]
    [Migration("20210118200259_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EntityFrameworkRepository.Models.Bestelling", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AutoTimeCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_CREATION")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("AutoTimeUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_UPDATE")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<long>("AutoUpdateCount")
                        .HasColumnType("bigint")
                        .HasColumnName("AUTO_UPDATE_COUNT");

                    b.Property<string>("AutoUpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUTO_UPDATED_BY")
                        .HasDefaultValueSql("(suser_sname())");

                    b.Property<bool>("Betaald")
                        .HasColumnType("bit")
                        .HasColumnName("Betaald");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datum");

                    b.Property<long>("KlantId")
                        .HasColumnType("bigint")
                        .HasColumnName("KlantId");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Prijs");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.ToTable("Bestelling");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Klant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adres");

                    b.Property<DateTime>("AutoTimeCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_CREATION")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("AutoTimeUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_UPDATE")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<long>("AutoUpdateCount")
                        .HasColumnType("bigint")
                        .HasColumnName("AUTO_UPDATE_COUNT");

                    b.Property<string>("AutoUpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUTO_UPDATED_BY")
                        .HasDefaultValueSql("(suser_sname())");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Naam");

                    b.HasKey("Id");

                    b.ToTable("Klant");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AutoTimeCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_CREATION")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("AutoTimeUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("AUTO_TIME_UPDATE")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<long>("AutoUpdateCount")
                        .HasColumnType("bigint")
                        .HasColumnName("AUTO_UPDATE_COUNT");

                    b.Property<string>("AutoUpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUTO_UPDATED_BY")
                        .HasDefaultValueSql("(suser_sname())");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Naam");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Prijs");

                    b.Property<int>("Valid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VALID")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Product_Bestelling", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId");

                    b.Property<long>("BestellingId")
                        .HasColumnType("bigint")
                        .HasColumnName("BestellingId");

                    b.Property<int>("Aantal")
                        .HasColumnType("int")
                        .HasColumnName("Aantal");

                    b.Property<DateTime>("AutoTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AutoTimeUpdate")
                        .HasColumnType("datetime2");

                    b.Property<long>("AutoUpdateCount")
                        .HasColumnType("bigint");

                    b.Property<string>("AutoUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "BestellingId");

                    b.HasIndex("BestellingId");

                    b.ToTable("Product_Bestelling");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Bestelling", b =>
                {
                    b.HasOne("EntityFrameworkRepository.Models.Klant", "Klant")
                        .WithMany("Bestellingen")
                        .HasForeignKey("KlantId")
                        .HasConstraintName("FK_Bestelling_Klant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Product_Bestelling", b =>
                {
                    b.HasOne("EntityFrameworkRepository.Models.Bestelling", "Bestelling")
                        .WithMany("ProductBestellingen")
                        .HasForeignKey("BestellingId")
                        .HasConstraintName("FK_Product_Bestelling_Bestelling")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkRepository.Models.Product", "Product")
                        .WithMany("ProductBestellingen")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Bestelling_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestelling");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Bestelling", b =>
                {
                    b.Navigation("ProductBestellingen");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Klant", b =>
                {
                    b.Navigation("Bestellingen");
                });

            modelBuilder.Entity("EntityFrameworkRepository.Models.Product", b =>
                {
                    b.Navigation("ProductBestellingen");
                });
#pragma warning restore 612, 618
        }
    }
}
